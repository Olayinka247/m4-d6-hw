{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olayi\\\\OneDrive\\\\Desktop\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\nimport CommentList from \"./CommentList\";\nimport AddComment from \"./AddComment\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = props => {\n  _s();\n\n  //   state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false,\n  //   };\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false); //   useEffect = async (prevProps) => {\n  //     // if (prevProps.asin !== props.asin) {\n  //     //   //   this.setState({\n  //     //   //     isLoading: true,\n  //     //   //   });\n  //     //   setIsLoading(true);\n\n  useEffect(() => {\n    commentArea();\n    setIsLoading(true);\n  });\n\n  const commentArea = async () => {\n    try {\n      let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comments/\" + props.asin, {\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw\"\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json(); //   this.setState({\n        //     comments: comments,\n        //     isLoading: false,\n        //     isError: false,\n        //   });\n\n        setComments(comments);\n        setIsLoading(false);\n        setIsError(false);\n      } else {\n        console.log(\"error\"); //   this.setState({ isLoading: false, isError: true });\n\n        setIsLoading(false);\n        setIsError(true);\n      }\n    } catch (error) {\n      console.log(error); // this.setState({ isLoading: false, isError: true });\n\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentArea, \"16ZFUbzLAKNRtQTYKxvEjqhqTHQ=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/olayi/OneDrive/Desktop/m4-d6-hw/src/components/CommentArea.jsx"],"names":["useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","props","comments","setComments","isLoading","setIsLoading","isError","setIsError","commentArea","response","fetch","asin","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC,CAT6B,CAW7B;AACA;AACA;AACA;AACA;AAEA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACXH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHQ,CAAT;;AAKA,QAAMG,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDAAyDT,KAAK,CAACU,IADvC,EAExB;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX;AAFK;AADX,OAFwB,CAA1B;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,UAAIA,QAAQ,CAACO,EAAb,EAAiB;AACf,YAAId,QAAQ,GAAG,MAAMO,QAAQ,CAACQ,IAAT,EAArB,CADe,CAEf;AACA;AACA;AACA;AACA;;AACAd,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAVD,MAUO;AACLO,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADK,CAEL;;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KA3BD,CA2BE,OAAOW,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EADc,CAEd;;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAlCD;;AAoCA,sBACE;AAAA,eACGH,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,KAAK,CAACU;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,cAAc,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApED;;GAAMF,W;;KAAAA,W;AAsEN,eAAeA,WAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from \"react\";\r\nimport CommentList from \"./CommentList\";\r\nimport AddComment from \"./AddComment\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\nconst CommentArea = (props) => {\r\n  //   state = {\r\n  //     comments: [], // comments will go here\r\n  //     isLoading: false,\r\n  //     isError: false,\r\n  //   };\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  //   useEffect = async (prevProps) => {\r\n  //     // if (prevProps.asin !== props.asin) {\r\n  //     //   //   this.setState({\r\n  //     //   //     isLoading: true,\r\n  //     //   //   });\r\n\r\n  //     //   setIsLoading(true);\r\n\r\n  useEffect(() => {\r\n    commentArea();\r\n    setIsLoading(true);\r\n  });\r\n\r\n  const commentArea = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        \"https://striveschool-api.herokuapp.com/api/comments/\" + props.asin,\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.ok) {\r\n        let comments = await response.json();\r\n        //   this.setState({\r\n        //     comments: comments,\r\n        //     isLoading: false,\r\n        //     isError: false,\r\n        //   });\r\n        setComments(comments);\r\n        setIsLoading(false);\r\n        setIsError(false);\r\n      } else {\r\n        console.log(\"error\");\r\n        //   this.setState({ isLoading: false, isError: true });\r\n        setIsLoading(false);\r\n        setIsError(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // this.setState({ isLoading: false, isError: true });\r\n      setIsLoading(false);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Loading />}\r\n      {isError && <Error />}\r\n      <AddComment asin={props.asin} />\r\n      <CommentList commentsToShow={comments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentArea;\r\n"]},"metadata":{},"sourceType":"module"}